// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

use crate::consumer::connected_apps_clients::Clients;
use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct ConnectedApp {
    pub client_id: String,
    pub client_name: String,
    pub client_description: String,
    pub status: String,
    pub full_access_allowed: bool,
    pub client_type: String,
    pub redirect_urls: std::vec::Vec<String>,
    pub access_token_expiry_minutes: i32,
    pub access_token_template_content: String,
    pub post_logout_redirect_urls: std::vec::Vec<String>,
    pub bypass_consent_for_offline_access: bool,
    pub client_secret_last_four: std::option::Option<String>,
    pub next_client_secret_last_four: std::option::Option<String>,
    pub access_token_custom_audience: std::option::Option<String>,
    pub logo_url: std::option::Option<String>,
}
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct ConnectedAppWithClientSecret {
    pub client_id: String,
    pub client_name: String,
    pub client_description: String,
    pub status: String,
    pub full_access_allowed: bool,
    pub client_type: String,
    pub redirect_urls: std::vec::Vec<String>,
    pub access_token_expiry_minutes: i32,
    pub access_token_template_content: String,
    pub post_logout_redirect_urls: std::vec::Vec<String>,
    pub bypass_consent_for_offline_access: bool,
    pub client_secret_last_four: std::option::Option<String>,
    pub next_client_secret_last_four: std::option::Option<String>,
    pub client_secret: std::option::Option<String>,
    pub access_token_custom_audience: std::option::Option<String>,
    pub logo_url: std::option::Option<String>,
}
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct ConnectedAppWithNextClientSecret {
    pub client_id: String,
    pub client_name: String,
    pub client_description: String,
    pub status: String,
    pub client_secret_last_four: String,
    pub full_access_allowed: bool,
    pub client_type: String,
    pub redirect_urls: std::vec::Vec<String>,
    pub next_client_secret: String,
    pub access_token_expiry_minutes: i32,
    pub access_token_template_content: String,
    pub post_logout_redirect_urls: std::vec::Vec<String>,
    pub bypass_consent_for_offline_access: bool,
    pub next_client_secret_last_four: std::option::Option<String>,
    pub access_token_custom_audience: std::option::Option<String>,
    pub logo_url: std::option::Option<String>,
}
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct ResultsMetadata {
    pub total: i32,
    pub next_cursor: std::option::Option<String>,
}

pub struct ConnectedApp {
    pub clients: Clients,
}

impl ConnectedApp {
    pub fn new(http_client: crate::client::Client) -> Self {
        Self {
            clients: Clients::new(http_client.clone()),
        }
    }
}
