// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

use serde::{Deserialize, Serialize};

/// SendRequest: Request type for `Discovery.send`.
#[derive(Serialize, Deserialize, Debug, Clone, Default)]
pub struct SendRequest {
    /// email_address: The email address of the Member.
    pub email_address: String,
    /// discovery_redirect_url: The URL that the end user clicks from the discovery Magic Link. This URL should
    /// be an endpoint in the backend server that
    ///   verifies the request by querying Stytch's discovery authenticate endpoint and continues the flow. If
    /// this value is not passed, the default
    ///   discovery redirect URL that you set in your Dashboard is used. If you have not set a default discovery
    /// redirect URL, an error is returned.
    pub discovery_redirect_url: std::option::Option<String>,
    /// pkce_code_challenge: A base64url encoded SHA256 hash of a one time secret used to validate that the
    /// request starts and ends on the same device.
    pub pkce_code_challenge: std::option::Option<String>,
    /// login_template_id: Use a custom template for discovery emails. By default, it will use your default
    /// email template. The template must be from Stytch's
    /// built-in customizations or a custom HTML email for Magic Links - Login.
    pub login_template_id: std::option::Option<String>,
    /// locale: Used to determine which language to use when sending the user this delivery method. Parameter is
    /// a [IETF BCP 47 language tag](https://www.w3.org/International/articles/language-tags/), e.g. `"en"`.
    ///
    /// Currently supported languages are English (`"en"`), Spanish (`"es"`), and Brazilian Portuguese
    /// (`"pt-br"`); if no value is provided, the copy defaults to English.
    ///
    /// Request support for additional languages
    /// [here](https://docs.google.com/forms/d/e/1FAIpQLScZSpAu_m2AmLXRT3F3kap-s_mcV6UTBitYn6CdyWP0-o7YjQ/viewform?usp=sf_link")!
    ///
    pub locale: std::option::Option<SendRequestLocale>,
}
/// SendResponse: Response type for `Discovery.send`.
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct SendResponse {
    /// request_id: Globally unique UUID that is returned with every API call. This value is important to log
    /// for debugging purposes; we may ask for this value to help identify a specific API call when helping you
    /// debug an issue.
    pub request_id: String,
    /// status_code: The HTTP status code of the response. Stytch follows standard HTTP response status code
    /// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
    /// are server errors.
    #[serde(with = "http_serde::status_code")]
    pub status_code: http::StatusCode,
}

#[derive(Serialize, Deserialize, Debug, Clone, Default)]
pub enum SendRequestLocale {
    #[serde(rename = "en")]
    #[default]
    En,
    #[serde(rename = "es")]
    Es,
    #[serde(rename = "ptbr")]
    Ptbr,
}

pub struct Discovery {
    http_client: crate::client::Client,
}

impl Discovery {
    pub fn new(http_client: crate::client::Client) -> Self {
        Self {
            http_client: http_client.clone(),
        }
    }

    pub async fn send(&self, body: SendRequest) -> crate::Result<SendResponse> {
        let path = String::from("/v1/b2b/magic_links/email/discovery/send");
        self.http_client
            .send(crate::Request {
                method: http::Method::POST,
                path,
                body,
            })
            .await
    }
}
